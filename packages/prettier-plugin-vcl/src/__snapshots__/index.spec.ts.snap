// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should format ACL declaration 1`] = `
"acl office_ip_ranges {
  "192.0.2.0"/24; // office network
  ! "192.0.2.12";
  "198.51.100.4";
  "2001:db8:ffff:ffff:ffff:ffff:ffff:ffff";
}
"
`;

exports[`should format Penaltybox/Ratecounter declaration 1`] = `
"penaltybox banned_users {}

ratecounter requests_per_second {}
"
`;

exports[`should format backend declaration 1`] = `
"backend F_backend {
  .host = "storage.googleapis.com";
  .port = "443";
  .ssl = true;
}
"
`;

exports[`should format director declaration 1`] = `
"director round_robin_director client {
  { .backend = F_backend; .weight = 1; }
}
"
`;

exports[`should format import declaration 1`] = `
"import std;
"
`;

exports[`should format include declaration 1`] = `
"include "std/lib.vcl";
"
`;

exports[`should format subroutine declaration 1`] = `
"sub vcl_recv {
  #FASTLY recv
  set req.http.X-Forwarded-For = client.ip;
  if (table.contains(deny_list, client.ip)) {
    error 403 "Forbidden";
  }
  return(lookup);

  if (
    req.http.Location ~ "^/admin" && req.http.Cookie !~ "admin" ||
    req.http.Location ~ "^/admin" && req.http.Cookie !~ "admin"
  ) {
    synthetic {"Hello, admin! Please log in."};
  }
}
"
`;

exports[`should format table declarations 1`] = `
"table redirects {
  "/old/path": "https://other.hostname/new/path",
  "/another/path": "/new/path",
}

table routing_table BACKEND {
  "a.example.com": b0,
  "b.example.com": b1,
  "c.example.com": b2,
}
"
`;

exports[`should format variable declaration 1`] = `
"backend backend_name {
  .dynamic = true;
  .share_key = "YOUR_SERVICE_ID";
  .host = "storage.googleapis.com";
  .port = "443";
  .ssl = true;
  .between_bytes_timeout = 10s;
  .connect_timeout = 1s;
  .first_byte_timeout = 15s;
  .max_connections = 200;
}
"
`;
